"use strict";angular.module("parkingCheckApp",["ngCookies","ngResource","ngSanitize","ngRoute","ngTouch","ngAnimate","ui.router","gsDirectives","ngStorage"]).constant("$config",{app:{name:"Parking Check"},"package":{name:"com.parkingcheck.gautham"},api:{prefix:"http:/",url:"api.parkwhiz.com",action:"search?q=",key:null},map:{linkType1:"https://www.google.com/maps/dir/Current+Location/",linkType2:"https://maps.google.com/maps?saddr=Current+Location&dirflg=w&daddr="},timer:5e3}).config(["$stateProvider","$urlRouterProvider","$compileProvider",function(a,b,c){b.otherwise("/dashboard"),a.state("main",{url:"/",templateUrl:"/views/main.html",controller:"MainCtrl"}).state("dashboard",{url:"/dashboard",templateUrl:"/views/dashboard.html",controller:"DashboardCtrl"}),c.aHrefSanitizationWhitelist(/^\s*(https?|geo|javascript):/)}]).run(["$rootScope","$state","$deviceListeners","NotificationService",function(a,b,c,d){a.$state=b,c.init(),a.$on("$$ready",function(){d.ready()})}]),angular.module("parkingCheckApp").controller("MainCtrl",["$scope","$geocode",function(a,b){a.locate=function(){b.geocode(a,{timeout:1e4}).then(function(b){a.position=b})},a.$on("$$ready",function(){a.isAvailable=!1,window.plugin&&window.plugin.notification&&window.plugin.notification.local&&(a.isAvailable=!0)})}]),angular.module("parkingCheckApp").factory("$geocode",["$q",function(a){function b(a,b,c){switch(a.code){case 1:b.$apply(function(){c.reject("You have rejected access to your location!")});break;case 2:b.$apply(function(){c.reject("Unable to determine your location. Please try again!")});break;case 3:b.$apply(function(){c.reject("Unable to determine your location. Please make sure your GPS is enabled!")})}}return{geocode:function(c,d){var e=a.defer(),f={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};return d&&d.timeout&&(f.timeout=d.timeout),navigator&&navigator.geolocation?navigator.geolocation.getCurrentPosition(function(a){c.$apply(function(){e.resolve(a)})},function(a){b(a,c,e)},f):e.reject("Browser does not support location services"),e.promise},watch:function(c,d){var e=a.defer(),f={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};return d&&d.timeout&&(f.timeout=d.timeout),navigator&&navigator.geolocation?navigator.geolocation.watchPosition(function(a){c.$apply(function(){e.resolve(a)})},function(a){b(a,c,e)},f):e.reject("Browser does not support location services"),e.promise}}}]),angular.module("parkingCheckApp").factory("$deviceListeners",["$document","$rootScope",function(a,b){function c(){a[0].addEventListener("deviceReady",function(a){b.$broadcast("$$ready",{eventDefault:a})}),a[0].addEventListener("backbutton",function(a){b.$broadcast("$$back",{eventDefault:a})}),a[0].addEventListener("menubutton",function(a){b.$broadcast("$$menu",{eventDefault:a})}),a[0].addEventListener("blur",function(a){b.$broadcast("$$blur",{eventDefault:a})}),a[0].addEventListener("focus",function(a){b.$broadcast("$$focus",{eventDefault:a})}),a[0].addEventListener("pause",function(a){b.$broadcast("$$pause",{eventDefault:a})}),a[0].addEventListener("resume",function(a){b.$broadcast("$$resume",{eventDefault:a})}),a[0].addEventListener("online",function(a){b.$broadcast("$$online",{eventDefault:a})}),a[0].addEventListener("offline",function(a){b.$broadcast("$$offline",{eventDefault:a})})}return{init:c}}]),angular.module("parkingCheckApp").service("NotificationService",[function(){this.ready=function(){}}]),angular.module("parkingCheckApp").service("$parking",["$localStorage",function(a){function b(b,c){a[c]={location:b,date:new Date}}function c(){a.started=null,a.ended=null}a.parkings||(a.parkings=[]),this.isStarted=function(){return a.started},this.isEnded=function(){return a.ended},this.parked=function(d,e){"start"===e?b(d,"started"):"end"===e&&(b(d,"ended"),a.parkings.push({start:a.started,end:a.ended}),c())}}]),angular.module("parkingCheckApp").controller("DashboardCtrl",["$scope","$parking","$geocode","$config","$timeout","$rootScope",function(a,b,c,d,e,f){function g(){a.updateTime=!1,e(function(){a.updateTime=!0}),c.geocode(a).then(function(b){a.location=b}),h()}function h(){a.isParked&&(i=e(g,d.timer))}var i;a.isParked=b.isStarted(),a.parkingControl=function(){a.isParked?(a.isParked=null,a.location=null,e.cancel(i),f.$emit("$alert",{message:"Your parking session ended"}),c.geocode(a).then(function(a){b.parked(a,"end")})):(f.$emit("$alert",{message:"Registering your parking location"}),c.geocode(a).then(function(c){b.parked(c,"start"),a.isParked=b.isStarted(),g()}))},g(),a.$on("$$pause",function(){e.cancel(i)}),a.$on("$$resume",g),a.$on("$$back",function(){navigator.app.exitApp()})}]),angular.module("parkingCheckApp").directive("parkingButton",function(){return{templateUrl:"/views/directives/parking-button.html",restrict:"E",scope:{clicker:"="},replace:!0,required:"clicker"}}),angular.module("parkingCheckApp").filter("parkingTime",function(){return function(a){if(a){var b=moment(a);return b.fromNow()}}}),angular.module("parkingCheckApp").directive("geoLink",["$config",function(a){return{template:function(){var a='<a class="map-link" data-ng-href="{{prefix}}{{geo.latitude}},{{geo.longitude}}{{suffixLink}}" data-rel="external" data-ng-transclude></a>';return a},restrict:"E",transclude:!0,replace:!0,scope:{geo:"=",suffix:"="},link:function(b){var c=document.body.dataset.platform||"web";switch(b.deviceType=c,c.toLowerCase()){case"android":b.prefix="geo:",b.suffix&&(b.suffixLink="?q="+b.suffix.latitude+","+b.suffix.longitude);break;case"ios":b.prefix="comgooglemaps://";break;default:b.prefix=a.map.linkType1}}}}]),angular.module("parkingCheckApp").directive("devicePlatform",["$window",function(a){return{restrict:"EA",link:function(b,c){var d="android";a.cordova&&(d=a.cordova.platformId),c[0].setAttribute("data-platform",d)}}}]);